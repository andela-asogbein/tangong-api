{"version":3,"sources":["../../src/controllers/gig.controller.js"],"names":["mongoose","require","formidable","cloudinary","config","cloud_name","api_key","api_secret","Gig","model","User","userController","module","exports","addImage","req","res","next","form","IncomingForm","parse","err","fields","files","body","hasOwnProperty","image","file","path","uploader","upload","result","imageUrl","url","addGig","addedBy","user","id","gig","save","json","status","getGigs","find","populate","sort","exec","gigs","getRandomGigs","arr","n","length","tempArr","i","push","splice","Math","floor","random","getOneGig","findById","_id","params","gig_id","updateGig","loggedInUser","console","log","error","update","deleteGig","remove","deleteAll","searchGigs","titleExpression","RegExp","query","title","searchCategories","category","category_id","searchUsers","user_id","uploadImage","response","img"],"mappings":"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","file":"gig.controller.js","sourcesContent":["'use strict';\n\nvar mongoose = require('mongoose');\nvar formidable = require('formidable');\nvar cloudinary = require('cloudinary');\n\nrequire(\"../models/gig.model\");\nrequire(\"../models/user.model\");\n\ncloudinary.config({\n  cloud_name: 'neddinn',\n  api_key: '358555269189826',\n  api_secret: 'jJZiRszXOelRPoIIYeIayKwzZic'\n});\n\nvar Gig = mongoose.model(\"Gig\");\nvar User = mongoose.model(\"User\");\n\nvar userController = require(\"./user.controller\");\n\nmodule.exports = {\n  addImage: function(req, res, next) {\n    var form = new formidable.IncomingForm();\n    form.parse(req, function(err, fields, files) {\n      req.body = fields;\n      if (!files.hasOwnProperty('file')) {\n        next();\n        return;\n      }\n      req.image = files.file.path;\n      cloudinary.uploader.upload(req.image, function(result) {\n        req.body.imageUrl = result.url;\n        next();\n      });\n    });\n  },\n  addGig: function(req, res) {\n    req.body.addedBy = req.user.id;\n    var gig = new Gig(req.body);\n    gig.save(function(err, gig) {\n      if (err) {\n        return res.json(err);\n      }\n      res.status(201).json(gig);\n    });\n  },\n\n  getGigs: function(req, res) {\n    Gig.find({}).populate('addedBy category').sort(\"-dateAdded\").exec(function(err, gigs) {\n      if (err) {\n        return res.json(err);\n      }\n      res.status(200).json(gigs);\n    });\n  },\n\n    getRandomGigs: function(req, res) {\n    Gig.find({}).populate('addedBy category').sort(\"-dateAdded\").exec(function(err, gigs) {\n      if (err) {\n        return res.json(err);\n      }\n      var arr = gigs;\n      var n = arr.length;\n      var tempArr = [];\n\n      for(var i = 0; i<n-1; i++){\n        tempArr.push(arr.splice(Math.floor(Math.random()*arr.length), 1)[0]);\n      }\n      tempArr.push(arr[0]);\n      arr = tempArr;\n      res.status(200).json(arr);\n    });\n  },\n\n\n\n  getOneGig: function(req, res) {\n    Gig.findById({\n      _id: req.params.gig_id\n    }).populate('addedBy category').exec(function(err, gig) {\n      if (err) {\n        return res.json(err);\n      }\n      res.status(200).json(gig);\n    });\n  },\n\n  updateGig: function(req, res) {\n    var loggedInUser = req.user.id;\n    console.log(2, loggedInUser);\n    // req.body.addedBy = req.body.addedBy._id;\n    console.log(1, req.body.addedBy);\n    if (req.body.addedBy !== loggedInUser) {\n      console.log(\"i reach\")\n      return res.json({\n        error: \"Unauhorized\"\n      });\n    }\n    Gig.update({\n      _id: req.body._id\n    }, req.body, function(err, gig) {\n      if (err) {\n        console.log(err);\n        return res.json(err);\n      }\n      res.status(201).json(gig);\n    });\n  },\n\n  deleteGig: function(req, res) {\n    Gig.remove({\n      _id: req.params.gig_id\n    }, function(err, gig) {\n      if (err) {\n        return res.json(err);\n      }\n      res.status(200).json(gig);\n    });\n  },\n  deleteAll: function(req, res) {\n    Gig.remove({}, function(err, gig) {\n      if (err) {\n        return res.json(err);\n      }\n      res.status(200).json(gig);\n    });\n  },\n\n  searchGigs: function(req, res) {\n    var titleExpression = new RegExp(req.query.title, 'ig');\n    Gig.find({\n      title: titleExpression\n    }, function(err, gigs) {\n      if (err) {\n        return res.json(err);\n      }\n      res.status(200).json(gigs);\n    });\n  },\n\n  searchCategories: function(req, res){\n    Gig.find({category: req.params.category_id}).populate('addedBy category').exec(function(err, gigs){\n      if(err){\n        return res.json(err);\n      }\n      res.status(200).json(gigs);\n    });\n  },\n\n  searchUsers: function(req, res){\n    var user_id = req.user_id;\n    Gig.find({\n      addedBy: user_id\n    }).populate('addedBy category').exec(function(err, gigs) {\n      if (err) {\n        return res.json(err);\n      }\n      res.status(200).json(gigs);\n    });\n  },\n\n  uploadImage: function(req, res, next) {\n    if (req.files.file) {\n      var path = req.files.file.path;\n      cloudinary.uploader.upload(path, function(response) {\n        req.img = response.url;\n        next();\n      });\n    } else {\n      next();\n    }\n  }\n};\n"]}