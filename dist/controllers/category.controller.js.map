{"version":3,"sources":["../../src/controllers/category.controller.js"],"names":["create","req","res","body","err","result","json","getAll","find","getOne","findById","params","id","update","_id","remove","removeOne"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe;AACXA,YAAQ,gBAASC,GAAT,EAAcC,GAAd,EAAmB;AACvB,2BAASF,MAAT,CAAgBC,IAAIE,IAApB,EAA0B,UAASC,GAAT,EAAcC,MAAd,EAAsB;AAC5C,gBAAID,GAAJ,EAAS;AACL,uBAAOF,IAAII,IAAJ,CAASF,GAAT,CAAP;AACH;AACDF,gBAAII,IAAJ,CAASD,MAAT;AACH,SALD;AAMH,KARU;AASXE,YAAQ,gBAASN,GAAT,EAAcC,GAAd,EAAmB;AACvB,2BAASM,IAAT,CAAc,EAAd,EAAkB,UAASJ,GAAT,EAAcC,MAAd,EAAsB;AACpC,gBAAID,GAAJ,EAAS;AACL,uBAAOF,IAAII,IAAJ,CAASF,GAAT,CAAP;AACH;AACDF,gBAAII,IAAJ,CAASD,MAAT;AACH,SALD;AAMH,KAhBU;AAiBXI,YAAQ,gBAASR,GAAT,EAAcC,GAAd,EAAmB;AACvB,2BAASQ,QAAT,CAAkBT,IAAIU,MAAJ,CAAWC,EAA7B,EAAiC,UAASR,GAAT,EAAcC,MAAd,EAAsB;AACnD,gBAAID,GAAJ,EAAS;AACL,uBAAOF,IAAII,IAAJ,CAASF,GAAT,CAAP;AACH;AACDF,gBAAII,IAAJ,CAASD,MAAT;AACH,SALD;AAMH,KAxBU;AAyBXQ,YAAQ,gBAASZ,GAAT,EAAcC,GAAd,EAAmB;AACvB,2BAASW,MAAT,CAAgB;AACZC,iBAAKb,IAAIU,MAAJ,CAAWC;AADJ,SAAhB,EAEGX,IAAIE,IAFP,EAEa,UAASC,GAAT,EAAcC,MAAd,EAAsB;AAC/B,gBAAID,GAAJ,EAAS;AACL,uBAAOF,IAAII,IAAJ,CAASF,GAAT,CAAP;AACH;AACDF,gBAAII,IAAJ,CAASD,MAAT;AACH,SAPD;AAQH,KAlCU;AAmCXU,YAAQ,gBAASd,GAAT,EAAcC,GAAd,EAAmB;AACvB,2BAASa,MAAT,CAAgB,EAAhB,EAAoB,UAASX,GAAT,EAAcC,MAAd,EAAsB;AACtC,gBAAID,GAAJ,EAAS;AACL,uBAAOF,IAAII,IAAJ,CAASF,GAAT,CAAP;AACH;AACDF,gBAAII,IAAJ,CAASD,MAAT;AACH,SALD;AAMH,KA1CU;AA2CXW,eAAW,mBAASf,GAAT,EAAcC,GAAd,EAAmB;AAC1B,2BAASa,MAAT,CAAgB;AACZD,iBAAKb,IAAIU,MAAJ,CAAWC;AADJ,SAAhB,EAEG,UAASR,GAAT,EAAcC,MAAd,EAAsB;AACrB,gBAAID,GAAJ,EAAS;AACL,uBAAOF,IAAII,IAAJ,CAASF,GAAT,CAAP;AACH;AACDF,gBAAII,IAAJ,CAASD,MAAT;AACH,SAPD;AAQH;AApDU,C","file":"category.controller.js","sourcesContent":["import mongoose from 'mongoose';\nimport Category from \"../models/category.model\"\n\nexport default {\n    create: function(req, res) {\n        Category.create(req.body, function(err, result) {\n            if (err) {\n                return res.json(err);\n            }\n            res.json(result);\n        })\n    },\n    getAll: function(req, res) {\n        Category.find({}, function(err, result) {\n            if (err) {\n                return res.json(err);\n            }\n            res.json(result);\n        })\n    },\n    getOne: function(req, res) {\n        Category.findById(req.params.id, function(err, result) {\n            if (err) {\n                return res.json(err);\n            }\n            res.json(result);\n        })\n    },\n    update: function(req, res) {\n        Category.update({\n            _id: req.params.id\n        }, req.body, function(err, result) {\n            if (err) {\n                return res.json(err);\n            }\n            res.json(result);\n        })\n    },\n    remove: function(req, res) {\n        Category.remove({}, function(err, result) {\n            if (err) {\n                return res.json(err);\n            }\n            res.json(result);\n        })\n    },\n    removeOne: function(req, res) {\n        Category.remove({\n            _id: req.params.id\n        }, function(err, result) {\n            if (err) {\n                return res.json(err);\n            }\n            res.json(result);\n        })\n    }\n}\n"]}