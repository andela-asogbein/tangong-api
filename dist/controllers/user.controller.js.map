{"version":3,"sources":["../../src/controllers/user.controller.js"],"names":["mongoose","require","async","crypto","nodemailer","User","model","Gig","mailer","bcrypt","jwt","superSecret","module","exports","authenticateUser","req","res","findOne","username","body","select","exec","err","user","json","message","validPassword","comparePassword","password","token","sign","id","_id","email","expiresInMinutes","success","verifyToken","next","headers","verify","status","getUserById","params","user_id","getUserByEmail","addUser2","create","code","errors","addUser","save","sendMail","getUsers","find","users","getOneUser","findById","getByUsername","updateUser","result","deleteUser","remove","addedBy","gig","deleteAllUsers","forgot","waterfall","done","randomBytes","buf","toString","resetPasswordToken","resetPasswordExpires","Date","now","transporter","createTransport","mailOptions","to","from","subject","text","reset","$gt","undefined","console","log"],"mappings":"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","file":"user.controller.js","sourcesContent":["'use strict';\n\nvar mongoose = require('mongoose');\nrequire(\"../models/user.model\");\nrequire(\"../models/gig.model\");\n\nvar async = require('async');\nvar crypto = require('crypto');\nvar nodemailer = require('nodemailer');\n\nvar User = mongoose.model('User');\nvar Gig = mongoose.model(\"Gig\");\n\nvar mailer = require(\"./mailer.controller.js\");\nvar bcrypt = require('bcrypt-nodejs');\n\n//authentication\nvar jwt = require('jsonwebtoken');\nvar superSecret = 'tangoforme';\n\n\nmodule.exports = {\n\n  authenticateUser: function(req, res) {\n    User.findOne({\n      username: req.body.username,\n    }).select('username password email').exec(function(err, user) {\n      if (err) {\n        return res.json(err);\n      } else if (!user) {\n        res.json({\n          message: 'User not found'\n        });\n      } else {\n        var validPassword = user.comparePassword(req.body.password);\n        if (!validPassword) {\n          res.json({\n            message: 'Wrong password'\n          });\n        } else {\n          var token = jwt.sign({\n            id: user._id,\n            username: user.username,\n            email: user.email\n          }, superSecret, {\n            expiresInMinutes: 43200\n          }); //end var token\n          res.json({\n            success: true,\n            message: 'Token Generated',\n            token: token\n          });\n        }\n      }\n    });\n  },\n\n  verifyToken: function(req, res, next) {\n    var token = req.headers['x-access-token'];\n\n    //if there is a token, decode it\n    if (token) {\n      jwt.verify(token, superSecret, function(err, user) {\n        if (err) {\n          return res.json({\n            message: 'Token could not be authenticated'\n          });\n        } else {\n          req.user = user;\n          // res.json(user);\n          next();\n        }\n      });\n    } else {\n      return res.status(403).json({\n        message: 'Token not found'\n      });\n    }\n  },\n  getUserById: function(req, res, next) {\n    User.findOne({\n      username: req.params.username\n    }, function(err, user) {\n      if (err) {\n        return res.json(err);\n      }\n      if (!user) {\n        return res.json(\"User doesn't exist\");\n      }\n      req.user_id = user._id;\n      next();\n    });\n  },\n\n  getUserByEmail: function(req, res) {\n    User.findOne({\n      email: req.params.email\n    }, function(err, user) {\n      if (err) {\n        return res.json(err);\n      }\n      if (!user) {\n        return res.json(\"User doesn't exist\");\n      }\n      res.status(200).json(user);\n    });\n  },\n\n  addUser2: function(req, res) {\n    User.create(req.body, function(err, user) {\n      if (err) {\n        if (err.code === 11000) {\n          res.json({\n            message: 'Username or Email already taken'\n          });\n        } else {\n          res.json({\n            message: err.errors.email.message\n          });\n        }\n        res.json(err);\n      }\n      res.status(201).json(user.username);\n    });\n  },\n\n  addUser: function(req, res) {\n    var user = new User(req.body);\n    user.save(function(err, user) {\n      if (err) {\n        return res.json(err);\n      }\n      mailer.sendMail(user.email, \"Welcome to Tango Nigeria\", \"Hello, \" + user.username + \" Welcome to Tango Nigeria. Login here: http://andela-ssunday.github.io/tangong\");\n      res.status(201).json(user);\n    });\n  },\n\n  getUsers: function(req, res) {\n    User.find(function(err, users) {\n      if (err) {\n        return res.json(err);\n      }\n      res.status(200).json(users);\n    });\n  },\n\n  getOneUser: function(req, res) {\n    User.findById({\n      _id: req.params.user_id\n    }, function(err, user) {\n      if (err) {\n        return res.json(err);\n      }\n      res.status(201).json(user);\n    });\n  },\n\n  getByUsername: function(req, res) {\n    User.findOne({\n      username: req.params.username\n    }, function(err, user) {\n      if (err) {\n        return res.json(err);\n      }\n      res.status(201).json(user);\n    });\n  },\n\n  updateUser: function(req, res) {\n\n    User.findById(req.params.user_id, function(err, user) {\n      if (err) {\n        return res.json(err);\n      }\n      user.username = req.body.username;\n      user.password = req.body.password;\n      user.save(function(err, result) {\n        if(err){\n          return res.json(err);\n        }\n        var token = jwt.sign({\n          id: result._id,\n          username: result.username,\n          email: result.email\n        }, superSecret, {\n          expiresInMinutes: 43200\n        });\n        res.status(201).json({\n          token: token\n        });\n      })\n    })\n    // bcrypt.hash(req.body.password, null, null, function(err, hash) {\n    //   req.body.password = hash;\n    //   User.update({\n    //     _id: req.params.user_id\n    //   }, req.body, function(err, user) {\n    //     if (err) {\n    //       return res.json(err);\n    //     }\n    //     var token = jwt.sign({\n    //       id: req.body._id,\n    //       username: req.body.username,\n    //       email: req.body.email\n    //     }, superSecret, {\n    //       expiresInMinutes: 43200\n    //     });\n    //     res.status(201).json({\n    //       token: token\n    //     });\n    //   });\n    // });\n  },\n\n  deleteUser: function(req, res) {\n    User.remove({\n      _id: req.params.user_id\n    }, function(err, user) {\n      if (err) {\n        return res.json(err);\n      } else {\n        Gig.remove({\n          addedBy: req.params.user_id\n        }, function(err, gig) {\n          if (err) {\n            return res.json(err);\n          }\n          res.status(200).json(gig);\n        });\n      }\n    });\n  },\n\n  deleteAllUsers: function(req, res) {\n    User.remove({}, function(err, users) {\n      if (err) {\n        return res.json(err);\n      }\n      res.status(200).json(users);\n    });\n  },\n\n  forgot: function(req, res, next) {\n\n    async.waterfall([\n      function(done) {\n        crypto.randomBytes(20, function(err, buf) {\n          var token = buf.toString('hex');\n          done(err, token);\n        });\n      },\n      function(token, done) {\n        User.findOne({\n          email: req.body.email\n        }, function(err, user) {\n          if (!user) {\n            return res.json({\n              message: 'No user found'\n            });\n          }\n\n          user.resetPasswordToken = token;\n          user.resetPasswordExpires = Date.now() + 3600000; // 1 hour\n\n          user.save(function(err) {\n            done(err, token, user);\n          });\n        });\n      },\n      function(token, user, done) {\n        var transporter = nodemailer.createTransport();\n        var mailOptions = {\n          to: user.email,\n          from: 'Tango Nigeria ✔ <no-reply@tangong.com>',\n          subject: 'Tango Password Reset',\n          text: 'You are receiving this because you (or someone else) have requested the reset of the password for your account.\\n\\n' +\n            'Please click on the following link, or paste this into your browser to complete the process:\\n\\n' + '\\n\\n' + 'http://andela-ssunday.github.io/tangong/#!/reset/password/' + token + '\\n\\n' +\n            ' If you did not request this, please ignore this email and your password will remain unchanged.\\n'\n        };\n        transporter.sendMail(mailOptions, function(err, res) {\n          done(err, 'done');\n          return res;\n        });\n      }\n    ], function(err) {\n      if (err) return next(err);\n      res.json({\n        message: 'Message Sent!'\n      });\n    });\n  },\n\n  reset: function(req, res) {\n    async.waterfall([\n      function(done) {\n        User.findOne({\n          resetPasswordToken: req.params.token,\n          resetPasswordExpires: {\n            $gt: Date.now()\n          }\n        }, function(err, user) {\n          if (!user) {\n            return res.json({\n              'message': 'User does not exist'\n            });\n          }\n\n          user.password = req.body.password;\n          user.resetPasswordToken = undefined;\n          user.resetPasswordExpires = undefined;\n\n          user.save(function(err, result) {\n            if (err) {\n              return res.json(err);\n            }\n            console.log(result);\n            res.json(result);\n          });\n        });\n      }\n    ], function(err) {\n      if (err) return err;\n      res.json({\n        message: 'Password changed!'\n      });\n    });\n  }\n};\n"]}